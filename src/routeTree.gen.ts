/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as NotesIndexImport } from './routes/notes/index'
import { Route as CarsIndexImport } from './routes/cars/index'
import { Route as ProductsProductIDImport } from './routes/products/$productID'
import { Route as NotesAddImport } from './routes/notes/add'
import { Route as NotesNoteIdImport } from './routes/notes/$noteId'
import { Route as CarsCarIDImport } from './routes/cars/$carID'
import { Route as NotesNoteIdEditImport } from './routes/notes/$noteId.edit'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const NotesIndexRoute = NotesIndexImport.update({
  path: '/notes/',
  getParentRoute: () => rootRoute,
} as any)

const CarsIndexRoute = CarsIndexImport.update({
  path: '/cars/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsProductIDRoute = ProductsProductIDImport.update({
  path: '/products/$productID',
  getParentRoute: () => rootRoute,
} as any)

const NotesAddRoute = NotesAddImport.update({
  path: '/notes/add',
  getParentRoute: () => rootRoute,
} as any)

const NotesNoteIdRoute = NotesNoteIdImport.update({
  path: '/notes/$noteId',
  getParentRoute: () => rootRoute,
} as any)

const CarsCarIDRoute = CarsCarIDImport.update({
  path: '/cars/$carID',
  getParentRoute: () => rootRoute,
} as any)

const NotesNoteIdEditRoute = NotesNoteIdEditImport.update({
  path: '/edit',
  getParentRoute: () => NotesNoteIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cars/$carID': {
      preLoaderRoute: typeof CarsCarIDImport
      parentRoute: typeof rootRoute
    }
    '/notes/$noteId': {
      preLoaderRoute: typeof NotesNoteIdImport
      parentRoute: typeof rootRoute
    }
    '/notes/add': {
      preLoaderRoute: typeof NotesAddImport
      parentRoute: typeof rootRoute
    }
    '/products/$productID': {
      preLoaderRoute: typeof ProductsProductIDImport
      parentRoute: typeof rootRoute
    }
    '/cars/': {
      preLoaderRoute: typeof CarsIndexImport
      parentRoute: typeof rootRoute
    }
    '/notes/': {
      preLoaderRoute: typeof NotesIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/notes/$noteId/edit': {
      preLoaderRoute: typeof NotesNoteIdEditImport
      parentRoute: typeof NotesNoteIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  CarsCarIDRoute,
  NotesNoteIdRoute.addChildren([NotesNoteIdEditRoute]),
  NotesAddRoute,
  ProductsProductIDRoute,
  CarsIndexRoute,
  NotesIndexRoute,
  ProductsIndexRoute,
])

/* prettier-ignore-end */
